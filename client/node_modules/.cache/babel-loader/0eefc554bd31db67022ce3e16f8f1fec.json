{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ProfileIcon from \"./ProfileIcon.vue\";\nexport default {\n  components: {\n    ProfileIcon: ProfileIcon\n  },\n  props: [\"item\"],\n  methods: {\n    scrollToBottom: function scrollToBottom() {\n      var container = this.$refs.container;\n      container.scrollTop = container.scrollHeight;\n    }\n  },\n  updated: function updated() {\n    this.scrollToBottom();\n  },\n  computed: function computed() {\n    this.scrollToBottom();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,iBAJA;AAKAC;AACAC,kBADA,4BACA;AACA;AACAC;AACA;AAJA,GALA;AAWAC,SAXA,qBAWA;AACA;AACA,GAbA;AAcAC,UAdA,sBAcA;AACA;AACA;AAhBA","names":["components","ProfileIcon","props","methods","scrollToBottom","container","updated","computed"],"sourceRoot":"src/components/Chat","sources":["MessageChat.vue"],"sourcesContent":["<!-- All messages-->\n<template>\n  <div id=\"container\" ref=\"container\">\n    <v-card elevation=\"4\" shaped width=\"344\">\n      <!-- Case is sender -->\n      <div v-if=\"item.username == 'You'\" style=\"text-align: right\">\n        <span class=\"blue--text\">\n          {{ item.message }}\n        </span>\n\n        <ProfileIcon\n          :username=\"item.username\"\n          :sender=\"true\"\n          :color=\"'indigo'\"\n        ></ProfileIcon>\n      </div>\n\n      <!-- Case is the receiver -->\n      <div v-else>\n        <ProfileIcon\n          :sender=\"false\"\n          :username=\"item.username\"\n          :color=\"'red'\"\n        ></ProfileIcon>\n        <span class=\"red--text\">\n          {{ item.message }}\n        </span>\n      </div>\n    </v-card>\n  </div>\n</template>\n<script>\nimport ProfileIcon from \"./ProfileIcon.vue\";\nexport default {\n  components: {\n    ProfileIcon,\n  },\n  props: [\"item\"],\n  methods: {\n    scrollToBottom() {\n      const container = this.$refs.container;\n      container.scrollTop = container.scrollHeight;\n    },\n  },\n  updated() {\n    this.scrollToBottom();\n  },\n  computed() {\n    this.scrollToBottom();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}