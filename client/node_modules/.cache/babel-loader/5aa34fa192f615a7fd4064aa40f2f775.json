{"ast":null,"code":"import { io } from \"socket.io-client\";\nimport MessagesChat from \"../components/Chat/ChatContainer.vue\";\nimport { VueTyper } from \"vue-typer\";\nexport default {\n  name: \"ChatPage\",\n  components: {\n    MessagesChat: MessagesChat,\n    VueTyper: VueTyper\n  },\n  data: function data() {\n    return {\n      message: \"\",\n      chat: [],\n      socket: {},\n      username: \"You\",\n      isTyping: false,\n      numUsers: 0,\n      lastTypingTime: lastTypingTime,\n      messageRules: [function (v) {\n        return !!v || \"Message can't be empty\";\n      }]\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", function () {\n      console.log(\"You connected with id : \".concat(Socket.id));\n    });\n    Socket.on(\"message\", function (msg) {\n      _this.chat.push(msg);\n    }); //Login\n    //Add new user to the chat rooom\n\n    this.socket = Socket;\n  },\n  watch: {\n    // whenever question changes, this function will run\n    message: function message() {\n      this.typing();\n    }\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      if (this.message != \"\") {\n        this.socket.emit(\"message\", this.message);\n        this.chat.push({\n          username: this.username,\n          message: this.message\n        });\n        this.message = \"\";\n      }\n    },\n    updateTyping: function updateTyping() {\n      if (!this.typing) {\n        this.typing = true;\n        this.socket.emit(\"typing\");\n      }\n\n      lastTypingTime = new Date().getTime();\n      setTimeout(function () {\n        var typingTimer = new Date().getTime();\n        var timeDiff = typingTimer - lastTypingTime;\n\n        if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\n          socket.emit(\"stop typing\");\n          typing = false;\n        }\n      }, TYPING_TIMER_LENGTH);\n    }\n  }\n};","map":{"version":3,"mappings":"AACA;AACA;AACA;AAEA;AACAA,kBADA;AAEAC;AACAC,8BADA;AAEAC;AAFA,GAFA;AAMAC,MANA,kBAMA;AACA;AACAC,iBADA;AAEAC,cAFA;AAGAC,gBAHA;AAIAC,qBAJA;AAKAC,qBALA;AAMAC,iBANA;AAQAC,oCARA;AASAC;AAAA;AAAA;AATA;AAWA,GAlBA;AAmBAC,SAnBA,qBAmBA;AAAA;;AACA;AACAC;AACAC;AACA,KAFA;AAGAD;AACA;AACA,KAFA,EALA,CAQA;AACA;;AAEA;AACA,GA/BA;AAgCAE;AACA;AACAX,WAFA,qBAEA;AACA;AACA;AAJA,GAhCA;AAsCAY;AACAC,eADA,yBACA;AACA;AACA;AACA;AAAAV;AAAAH;AAAA;AACA;AACA;AACA,KAPA;AAQAc,gBARA,0BAQA;AACA;AACA;AACA;AACA;;AACAR;AAEAS;AACA;AACA;;AACA;AACAb;AACAc;AACA;AACA,OAPA,EAOAC,mBAPA;AAQA;AAvBA;AAtCA","names":["name","components","MessagesChat","VueTyper","data","message","chat","socket","username","isTyping","numUsers","lastTypingTime","messageRules","mounted","Socket","console","watch","methods","sendMessage","updateTyping","setTimeout","typing","TYPING_TIMER_LENGTH"],"sourceRoot":"src/views","sources":["ChatView.vue"],"sourcesContent":["<script>\nimport { io } from \"socket.io-client\";\nimport MessagesChat from \"../components/Chat/ChatContainer.vue\";\nimport { VueTyper } from \"vue-typer\";\n\nexport default {\n  name: \"ChatPage\",\n  components: {\n    MessagesChat,\n    VueTyper,\n  },\n  data() {\n    return {\n      message: \"\",\n      chat: [],\n      socket: {},\n      username: \"You\",\n      isTyping: false,\n      numUsers: 0,\n\n      lastTypingTime,\n      messageRules: [(v) => !!v || \"Message can't be empty\"],\n    };\n  },\n  mounted() {\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", () => {\n      console.log(`You connected with id : ${Socket.id}`);\n    });\n    Socket.on(\"message\", (msg) => {\n      this.chat.push(msg);\n    });\n    //Login\n    //Add new user to the chat rooom\n\n    this.socket = Socket;\n  },\n  watch: {\n    // whenever question changes, this function will run\n    message() {\n      this.typing();\n    },\n  },\n  methods: {\n    sendMessage() {\n      if (this.message != \"\") {\n        this.socket.emit(\"message\", this.message);\n        this.chat.push({ username: this.username, message: this.message });\n        this.message = \"\";\n      }\n    },\n    updateTyping() {\n      if (!this.typing) {\n        this.typing = true;\n        this.socket.emit(\"typing\");\n      }\n      lastTypingTime = new Date().getTime();\n\n      setTimeout(() => {\n        const typingTimer = new Date().getTime();\n        const timeDiff = typingTimer - lastTypingTime;\n        if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\n          socket.emit(\"stop typing\");\n          typing = false;\n        }\n      }, TYPING_TIMER_LENGTH);\n    },\n  },\n};\n</script>\n\n<template>\n  <v-container fluid>\n    {{ isTyping }}\n    <h1>Register as {{ username }}</h1>\n    <MessagesChat :chat.sync=\"chat\"></MessagesChat>\n    <vue-typer text=\"Someone is writting...\"></vue-typer>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation @submit=\"sendMessage\">\n      <v-footer padless absolute>\n        <v-container>\n          <v-row>\n            <v-textarea\n              filled\n              auto-grow\n              v-model=\"message\"\n              label=\"Send a Message\"\n              placeholder=\"Aa\"\n              outlined\n            ></v-textarea>\n            <v-btn depressed color=\"primary\" type=\"submit\"> Send </v-btn>\n          </v-row>\n        </v-container>\n        <v-col class=\"text-center\" cols=\"12\"> </v-col>\n      </v-footer>\n    </v-form>\n  </v-container>\n</template>\n\n"]},"metadata":{},"sourceType":"module"}