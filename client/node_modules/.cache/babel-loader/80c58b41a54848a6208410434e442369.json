{"ast":null,"code":"import { io } from \"socket.io-client\";\nexport default {\n  name: \"ChatPage\",\n  data: function data() {\n    return {\n      message: \"\",\n      chat: [],\n      socket: {},\n      username: \"You\",\n      numUsers: 0\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", function () {\n      console.log(\"You connected with id : \".concat(Socket.id));\n    });\n    Socket.on(\"message\", function (msg) {\n      _this.chat.push(msg);\n    }); //Login\n    //Add new user to the chat rooom\n\n    this.socket = Socket;\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      this.socket.emit(\"message\", this.message);\n      this.chat.push({\n        username: this.username,\n        message: this.message\n      });\n      this.message = \"\";\n    },\n    typing: function typing() {}\n  }\n};","map":{"version":3,"mappings":"AACA;AAEA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,iBADA;AAEAC,cAFA;AAGAC,gBAHA;AAIAC,qBAJA;AAKAC;AALA;AAOA,GAVA;AAWAC,SAXA,qBAWA;AAAA;;AACA;AACAC;AACAC;AACA,KAFA;AAGAD;AACA;AACA,KAFA,EALA,CAQA;AACA;;AAEA;AACA,GAvBA;AAwBAE;AACAC,eADA,yBACA;AACA;AACA;AAAAN;AAAAH;AAAA;AACA;AACA,KALA;AAMAU,UANA,oBAMA;AANA;AAxBA","names":["name","data","message","chat","socket","username","numUsers","mounted","Socket","console","methods","sendMessage","typing"],"sourceRoot":"src/views","sources":["ChatView.vue"],"sourcesContent":["<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n  name: \"ChatPage\",\n  data() {\n    return {\n      message: \"\",\n      chat: [],\n      socket: {},\n      username: \"You\",\n      numUsers: 0,\n    };\n  },\n  mounted() {\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", () => {\n      console.log(`You connected with id : ${Socket.id}`);\n    });\n    Socket.on(\"message\", (msg) => {\n      this.chat.push(msg);\n    });\n    //Login\n    //Add new user to the chat rooom\n\n    this.socket = Socket;\n  },\n  methods: {\n    sendMessage() {\n      this.socket.emit(\"message\", this.message);\n      this.chat.push({ username: this.username, message: this.message });\n      this.message = \"\";\n    },\n    typing() {},\n  },\n};\n</script>\n\n<template>\n  <v-container>\n    <h1>Registrado como : {{ username }}</h1>\n\n    <div\n      v-for=\"item in chat\"\n      :key=\"item.username\"\n      :class=\"[item.username == 'You' ? 'justify-end' : null]\"\n    >\n      <span v-if=\"item.username == 'You'\" class=\"blue--text\">\n        {{ item.message }}\n      </span>\n      <v-avatar :color=\"item.from == 'You' ? 'indigo' : 'red'\" size=\"36\">\n        <span class=\"white--text\">{{ item.username[0] }}</span>\n      </v-avatar>\n      <span v-if=\"item.from != 'You'\" class=\"blue--text ml-3\">\n        {{ item.msg }}\n      </span>\n    </div>\n    <v-form @submit=\"sendMessage\">\n      <v-footer padless absolute>\n        <v-container>\n          <v-row>\n            <v-text-field\n              v-model=\"message\"\n              label=\"Send a Message\"\n              placeholder=\"Aa\"\n              outlined\n              required\n            ></v-text-field>\n            <v-btn depressed color=\"primary\" type=\"submit\"> Send </v-btn>\n          </v-row>\n        </v-container>\n        <v-col class=\"text-center\" cols=\"12\"> </v-col>\n      </v-footer>\n    </v-form>\n  </v-container>\n</template>"]},"metadata":{},"sourceType":"module"}