{"ast":null,"code":"import _asyncToGenerator from \"/home/javierlopez/Documentos/U/titulacion/prototipos/propios/chat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  props: [\"title\"],\n  data: function data() {\n    return {\n      snack: false,\n      snackColor: \"\",\n      snackText: \"\",\n      valid: false,\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      passwordRules: [function (v) {\n        return !!v || \"Password is required\";\n      }, function (v) {\n        return v.length >= 8 || \"Password is required\";\n      }],\n      emailRules: [function (v) {\n        return !!v || \"The email is required\";\n      }, function (v) {\n        return /.+@.+\\..+/.test(v) || \"Invalid email\";\n      }]\n    };\n  },\n  methods: {\n    userLogin: function userLogin() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.$refs.form.validate()) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.post(process.env.API_URL + \"user/login\", _this.user);\n\n              case 4:\n                _this.snack = true;\n                _this.snackColor = \"succes\";\n                _this.snackText = \"Succesfully Login\";\n\n                _this.$router.push({\n                  path: \"/landing\"\n                });\n\n                _context.next = 17;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n                console.log(_context.t0.response);\n                _this.snack = true;\n                _this.snackColor = \"error\";\n                _this.snackText = \"User or password wrong\";\n\n              case 17:\n                _context.next = 22;\n                break;\n\n              case 19:\n                _this.snack = true;\n                _this.snackColor = \"error\";\n                _this.snackText = \"Put the required data\";\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACAA,kBADA;AAEAC;AAAA;AACAC,kBADA;AAEAC,oBAFA;AAGAC,mBAHA;AAIAC,kBAJA;AAKAC;AACAC,iBADA;AAEAC;AAFA,OALA;AASAC,sBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CATA;AAaAC,mBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA;AAbA;AAAA,GAFA;AAoBAC;AACAC,aADA,uBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,2BADA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAGAC,0DAHA;;AAAA;AAIA;AACA;AACA;;AACA;AAAAC;AAAA;;AAPA;AAAA;;AAAA;AAAA;AAAA;AASAC;AACAA;AACA;AACA;AACA;;AAbA;AAAA;AAAA;;AAAA;AAgBA;AACA;AACA;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AArBA;AApBA","names":["props","data","snack","snackColor","snackText","valid","user","email","password","passwordRules","emailRules","methods","userLogin","axios","path","console"],"sourceRoot":"src/components/General","sources":["HomeForm.vue"],"sourcesContent":["<template>\n  <v-card width=\"500px\" class=\"mx-auto mt-5 rounded-lg\" elevation=\"12\">\n    <v-container class=\"pa-7\">\n      <v-card-title class=\"justify-center\">\n        <p class=\"text-h4 text--primary\">{{ title }}</p>\n      </v-card-title>\n\n      <v-form\n        v-if=\"title == 'Login'\"\n        ref=\"form\"\n        class=\"form-signin\"\n        lazy-validation\n        @submit.prevent=\"userLogin\"\n      >\n        <v-text-field\n          v-model=\"user.email\"\n          :rules=\"emailRules\"\n          :prepend-icon=\"`mdi-email`\"\n          label=\"Email\"\n          required\n          :placeholder=\"'name.lastname@email.web'\"\n        ></v-text-field>\n\n        <v-text-field\n          v-model=\"user.password\"\n          type=\"password\"\n          label=\"Password\"\n          required\n          :prepend-icon=\"'mdi-key'\"\n          :rules=\"passwordRules\"\n        ></v-text-field>\n        <v-btn\n          type=\"submit\"\n          class=\"mb-10 mt-3 text-center\"\n          rounded\n          color=\"secondary\"\n          light\n          block\n        >\n          Login\n        </v-btn>\n      </v-form>\n    </v-container>\n    <v-snackbar v-model=\"snack\" :timeout=\"3000\" :color=\"snackColor\">\n      {{ snackText }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn v-bind=\"attrs\" text @click=\"snack = false\"> Close </v-btn>\n      </template>\n    </v-snackbar>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  props: [\"title\"],\n  data: () => ({\n    snack: false,\n    snackColor: \"\",\n    snackText: \"\",\n    valid: false,\n    user: {\n      email: \"\",\n      password: \"\",\n    },\n    passwordRules: [\n      (v) => !!v || \"Password is required\",\n      (v) => v.length >= 8 || \"Password is required\",\n    ],\n    emailRules: [\n      (v) => !!v || \"The email is required\",\n      (v) => /.+@.+\\..+/.test(v) || \"Invalid email\",\n    ],\n  }),\n  methods: {\n    async userLogin() {\n      if (this.$refs.form.validate()) {\n        try {\n          await axios.post(process.env.API_URL + \"user/login\", this.user);\n          this.snack = true;\n          this.snackColor = \"succes\";\n          this.snackText = \"Succesfully Login\";\n          this.$router.push({ path: \"/landing\" });\n        } catch (err) {\n          console.log(err);\n          console.log(err.response);\n          this.snack = true;\n          this.snackColor = \"error\";\n          this.snackText = \"User or password wrong\";\n        }\n      } else {\n        this.snack = true;\n        this.snackColor = \"error\";\n        this.snackText = \"Put the required data\";\n      }\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}