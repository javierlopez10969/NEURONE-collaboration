{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validationMixin } from \"vuelidate\";\nimport { required, maxLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  props: [\"title\"],\n  data: function data() {\n    return {};\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACAA,kBADA;AAEAC;AAAA;AAAA;AAFA","names":["props","data"],"sourceRoot":"src/components/General","sources":["HomeForm.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card>\n      <v-card-title class=\"text-center\">{{ title }} </v-card-title>\n      <v-form class=\"text-center\" v-if=\"title === Register\"\n        ><v-text-field\n          v-model=\"name\"\n          :error-messages=\"nameErrors\"\n          :counter=\"10\"\n          label=\"Name\"\n          required\n          @input=\"$v.name.$touch()\"\n          @blur=\"$v.name.$touch()\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"email\"\n          :error-messages=\"emailErrors\"\n          label=\"E-mail\"\n          required\n          @input=\"$v.email.$touch()\"\n          @blur=\"$v.email.$touch()\"\n        ></v-text-field>\n        <v-select\n          v-model=\"select\"\n          :items=\"items\"\n          :error-messages=\"selectErrors\"\n          label=\"Item\"\n          required\n          @change=\"$v.select.$touch()\"\n          @blur=\"$v.select.$touch()\"\n        ></v-select>\n        <v-checkbox\n          v-model=\"checkbox\"\n          :error-messages=\"checkboxErrors\"\n          label=\"Do you agree?\"\n          required\n          @change=\"$v.checkbox.$touch()\"\n          @blur=\"$v.checkbox.$touch()\"\n        ></v-checkbox>\n\n        <v-btn class=\"mr-4\" @click=\"submit\"> submit </v-btn>\n        <v-btn @click=\"clear\"> clear </v-btn>\n      </v-form>\n\n      <v-form v-if=\"title == Login\"\n        ><v-text-field\n          v-model=\"name\"\n          :error-messages=\"nameErrors\"\n          :counter=\"10\"\n          label=\"Name\"\n          required\n          @input=\"$v.name.$touch()\"\n          @blur=\"$v.name.$touch()\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"email\"\n          :error-messages=\"emailErrors\"\n          label=\"E-mail\"\n          required\n          @input=\"$v.email.$touch()\"\n          @blur=\"$v.email.$touch()\"\n        ></v-text-field>\n        <v-select\n          v-model=\"select\"\n          :items=\"items\"\n          :error-messages=\"selectErrors\"\n          label=\"Item\"\n          required\n          @change=\"$v.select.$touch()\"\n          @blur=\"$v.select.$touch()\"\n        ></v-select>\n        <v-checkbox\n          v-model=\"checkbox\"\n          :error-messages=\"checkboxErrors\"\n          label=\"Do you agree?\"\n          required\n          @change=\"$v.checkbox.$touch()\"\n          @blur=\"$v.checkbox.$touch()\"\n        ></v-checkbox>\n\n        <v-btn class=\"mr-4\" @click=\"submit\"> submit </v-btn>\n        <v-btn @click=\"clear\"> clear </v-btn>\n      </v-form>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required, maxLength, email } from \"vuelidate/lib/validators\";\n\nexport default {\n  mixins: [validationMixin],\n\n  validations: {\n    name: { required, maxLength: maxLength(10) },\n    email: { required, email },\n    select: { required },\n    checkbox: {\n      checked(val) {\n        return val;\n      },\n    },\n  },\n\n  data: () => ({\n    name: \"\",\n    email: \"\",\n    select: null,\n    items: [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"],\n    checkbox: false,\n  }),\n\n  computed: {\n    checkboxErrors() {\n      const errors = [];\n      if (!this.$v.checkbox.$dirty) return errors;\n      !this.$v.checkbox.checked && errors.push(\"You must agree to continue!\");\n      return errors;\n    },\n    selectErrors() {\n      const errors = [];\n      if (!this.$v.select.$dirty) return errors;\n      !this.$v.select.required && errors.push(\"Item is required\");\n      return errors;\n    },\n    nameErrors() {\n      const errors = [];\n      if (!this.$v.name.$dirty) return errors;\n      !this.$v.name.maxLength &&\n        errors.push(\"Name must be at most 10 characters long\");\n      !this.$v.name.required && errors.push(\"Name is required.\");\n      return errors;\n    },\n    emailErrors() {\n      const errors = [];\n      if (!this.$v.email.$dirty) return errors;\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\n      !this.$v.email.required && errors.push(\"E-mail is required\");\n      return errors;\n    },\n  },\n\n  methods: {\n    submit() {\n      this.$v.$touch();\n    },\n    clear() {\n      this.$v.$reset();\n      this.name = \"\";\n      this.email = \"\";\n      this.select = null;\n      this.checkbox = false;\n    },\n  },\n};\n</script>\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required, maxLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  props: [\"title\"],\n  data: () => ({}),\n};\n</script>"]},"metadata":{},"sourceType":"module"}