{"ast":null,"code":"import { io } from \"socket.io-client\";\nexport default {\n  name: \"ChatPage\",\n  data: function data() {\n    return {\n      message: \"\",\n      chat: [],\n      socket: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", function () {\n      console.log(\"You connected with id : \".concat(Socket.id));\n    });\n    Socket.on(\"message\", function (msg) {\n      console.log(msg);\n\n      _this.chat.push({\n        message: msg\n      });\n    });\n    this.socket = Socket;\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      this.socket.emit(\"message\", this.message);\n      this.message = \"\";\n    },\n    typing: function typing() {}\n  }\n};","map":{"version":3,"mappings":"AACA;AAEA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,iBADA;AAEAC,cAFA;AAGAC;AAHA;AAKA,GARA;AASAC,SATA,qBASA;AAAA;;AACA;AACAC;AACAC;AACA,KAFA;AAGAD;AACAC;;AACA;AAAAL;AAAA;AACA,KAHA;AAIA;AACA,GAnBA;AAoBAM;AACAC,eADA,yBACA;AACA;AACA;AACA,KAJA;AAKAC,UALA,oBAKA;AALA;AApBA","names":["name","data","message","chat","socket","mounted","Socket","console","methods","sendMessage","typing"],"sourceRoot":"src/views","sources":["ChatView.vue"],"sourcesContent":["<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n  name: \"ChatPage\",\n  data() {\n    return {\n      message: \"\",\n      chat: [],\n      socket: {},\n    };\n  },\n  mounted() {\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", () => {\n      console.log(`You connected with id : ${Socket.id}`);\n    });\n    Socket.on(\"message\", (msg) => {\n      console.log(msg);\n      this.chat.push({ message: msg });\n    });\n    this.socket = Socket;\n  },\n  methods: {\n    sendMessage() {\n      this.socket.emit(\"message\", this.message);\n      this.message = \"\";\n    },\n    typing() {},\n  },\n};\n</script>\n\n<template>\n  <v-form @submit=\"sendMessage\">\n    <ul id=\"example-1\">\n      <li v-for=\"item in chat\" :key=\"item.message\">\n        {{ item.message }}\n      </li>\n    </ul>\n    <v-container>\n      <v-row align=\"end\">\n        <v-col>\n          <div\n            v-for=\"(item, index) in chat\"\n            :key=\"index\"\n            :class=\"[\n              'd-flex flex-row align-center',\n              item.from == 'user' ? 'justify-end' : null,\n            ]\"\n          >\n            <span v-if=\"item.from == 'user'\" class=\"blue--text\">{{\n              item.msg\n            }}</span>\n            <v-avatar :color=\"item.from == 'user' ? 'indigo' : 'red'\" size=\"36\">\n              <span class=\"white--text\">{{ item.from[0] }}</span>\n            </v-avatar>\n            <span v-if=\"item.from != 'user'\" class=\"blue--text ml-3\">{{\n              item.msg\n            }}</span>\n          </div>\n        </v-col>\n      </v-row>\n    </v-container>\n    <v-footer padless absolute>\n      <v-container>\n        <v-row>\n          <v-text-field\n            v-model=\"message\"\n            label=\"Send a Message\"\n            placeholder=\"Aa\"\n            outlined\n            required\n          ></v-text-field>\n          <v-btn depressed color=\"primary\" type=\"submit\"> Send </v-btn>\n        </v-row>\n      </v-container>\n      <v-col class=\"text-center\" cols=\"12\"> </v-col>\n    </v-footer>\n  </v-form>\n</template>"]},"metadata":{},"sourceType":"module"}