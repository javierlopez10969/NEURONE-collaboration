{"ast":null,"code":"import _asyncToGenerator from \"/home/javierlopez/Documentos/U/titulacion/prototipos/propios/chat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { io } from \"socket.io-client\";\nexport default {\n  name: \"ChatPage\",\n  data: function data() {\n    return {\n      message: \"Hey!\",\n      items: [{\n        message: \"Foo\"\n      }, {\n        message: \"Bar\"\n      }],\n      socket: {}\n    };\n  },\n  mounted: function mounted() {\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", function () {\n      console.log(\"You connected with id : \".concat(Socket.id));\n    });\n    this.socket = Socket;\n  },\n  methods: {\n    update: function update(message) {\n      console.log(\"HOLAAAAAAAAAA\");\n      this.message = message;\n    },\n    sendMessage: function sendMessage() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.socket.emit(\"message\", _this.message); //this.items.push({ message: this.message });\n\n\n                _context.next = 3;\n                return _this.socket.on(\"message\", function (msg) {\n                  console.log(msg);\n                  this.items.push({\n                    message: msg\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;AACA;AAEA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,qBADA;AAEAC;AAAAD;AAAA;AAAAA;AAAA,QAFA;AAGAE;AAHA;AAKA,GARA;AASAC,SATA,qBASA;AACA;AACAC;AACAC;AACA,KAFA;AAIA;AACA,GAhBA;AAiBAC;AACAC,UADA,kBACAP,OADA,EACA;AACAK;AACA;AACA,KAJA;AAKAG,eALA,yBAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4DADA,CAEA;;;AAFA;AAAA,uBAGA;AACAH;AACA;AAAAL;AAAA;AACA,iBAHA,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAZA;AAjBA","names":["name","data","message","items","socket","mounted","Socket","console","methods","update","sendMessage"],"sourceRoot":"src/views","sources":["ChatView.vue"],"sourcesContent":["<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n  name: \"ChatPage\",\n  data() {\n    return {\n      message: \"Hey!\",\n      items: [{ message: \"Foo\" }, { message: \"Bar\" }],\n      socket: {},\n    };\n  },\n  mounted() {\n    var Socket = io(\"http://localhost:3000\");\n    Socket.on(\"connect\", () => {\n      console.log(`You connected with id : ${Socket.id}`);\n    });\n\n    this.socket = Socket;\n  },\n  methods: {\n    update(message) {\n      console.log(\"HOLAAAAAAAAAA\");\n      this.message = message;\n    },\n    async sendMessage() {\n      this.socket.emit(\"message\", this.message);\n      //this.items.push({ message: this.message });\n      await this.socket.on(\"message\", function (msg) {\n        console.log(msg);\n        this.items.push({ message: msg });\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <v-form @submit=\"sendMessage\">\n    <ul id=\"example-1\">\n      <li v-for=\"item in items\" :key=\"item.message\">\n        {{ item.message }}\n      </li>\n    </ul>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" sm=\"6\" md=\"3\">\n          <v-text-field\n            v-model=\"message\"\n            label=\"Outlined\"\n            placeholder=\"Placeholder\"\n            outlined\n          ></v-text-field>\n        </v-col>\n      </v-row>\n      <v-btn depressed color=\"primary\" type=\"submit\"> Send </v-btn>\n    </v-container>\n  </v-form>\n</template>"]},"metadata":{},"sourceType":"module"}