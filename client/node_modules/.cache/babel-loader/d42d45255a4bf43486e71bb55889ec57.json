{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NavBar from \"./components/General/NavBar.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      show: \"true\",\n      baseURL: \"http://localhost:3000/api\",\n      tamanoRoute: 0,\n      usuario: {},\n      currentRouteName: \"\"\n    };\n  },\n  components: {\n    NavBar: NavBar\n  },\n  methods: {\n    ocultarMethod: function ocultarMethod() {\n      if (localStorage.getItem(\"token\") === null) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  created: function created() {\n    this.show = this.ocultarMethod();\n    this.tamanoRoute = this.selectTamano();\n    this.currentRouteName = this.$route.name;\n  },\n  updated: function updated() {\n    var _this = this;\n\n    axios.get(\"http://localhost:3000/api/user\", {\n      headers: {\n        token: localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      _this.usuario = res.data.user;\n    });\n    this.show = this.ocultarMethod();\n    this.tamanoRoute = this.selectTamano();\n  },\n  computed: {\n    selectTamano: function selectTamano() {\n      if (this.currentRouteName() == \"home\") {\n        return 0;\n      } else if (this.currentRouteName() == \"tablero\") {\n        return 5;\n      } else {\n        return 0;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    axios.get(\"http://localhost:3000/api/user\", {\n      headers: {\n        token: localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      _this2.usuario = res.data.user;\n    });\n    this.tamanoRoute = this.selectTamano();\n    this.show = this.ocultarMethod();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAUA;AACA;AAEA;AACAA,aADA;AAEAC,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC,0CAFA;AAGAC,oBAHA;AAIAC,iBAJA;AAKAC;AALA;AAOA,GAVA;AAWAC;AACAC;AADA,GAXA;AAcAC;AACAC,iBADA,2BACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AAPA,GAdA;AAuBAC,SAvBA,qBAuBA;AACA;AACA;AACA;AACA,GA3BA;AA4BAC,SA5BA,qBA4BA;AAAA;;AACAC,UACAC,GADA,CACA,gCADA,EACA;AACAC;AAAAC;AAAA;AADA,KADA,EAIAC,IAJA,CAIA;AACA;AACA,KANA;AAOA;AACA;AACA,GAtCA;AAuCAC;AACAC,gBADA,0BACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AATA,GAvCA;AAkDAC,SAlDA,qBAkDA;AAAA;;AACAP,UACAC,GADA,CACA,gCADA,EACA;AACAC;AAAAC;AAAA;AADA,KADA,EAIAC,IAJA,CAIA;AACA;AACA,KANA;AAOA;AACA;AACA;AA5DA","names":["name","data","show","baseURL","tamanoRoute","usuario","currentRouteName","components","NavBar","methods","ocultarMethod","created","updated","axios","get","headers","token","then","computed","selectTamano","mounted"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <NavBar></NavBar>\n    <v-main>\n      <router-view />\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport NavBar from \"./components/General/NavBar.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      show: \"true\",\n      baseURL: \"http://localhost:3000/api\",\n      tamanoRoute: 0,\n      usuario: {},\n      currentRouteName: \"\",\n    };\n  },\n  components: {\n    NavBar,\n  },\n  methods: {\n    ocultarMethod() {\n      if (localStorage.getItem(\"token\") === null) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n  },\n  created() {\n    this.show = this.ocultarMethod();\n    this.tamanoRoute = this.selectTamano();\n    this.currentRouteName = this.$route.name;\n  },\n  updated() {\n    axios\n      .get(\"http://localhost:3000/api/user\", {\n        headers: { token: localStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        this.usuario = res.data.user;\n      });\n    this.show = this.ocultarMethod();\n    this.tamanoRoute = this.selectTamano();\n  },\n  computed: {\n    selectTamano() {\n      if (this.currentRouteName() == \"home\") {\n        return 0;\n      } else if (this.currentRouteName() == \"tablero\") {\n        return 5;\n      } else {\n        return 0;\n      }\n    },\n  },\n  mounted() {\n    axios\n      .get(\"http://localhost:3000/api/user\", {\n        headers: { token: localStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        this.usuario = res.data.user;\n      });\n    this.tamanoRoute = this.selectTamano();\n    this.show = this.ocultarMethod();\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}