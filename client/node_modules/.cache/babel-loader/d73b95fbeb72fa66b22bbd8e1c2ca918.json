{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NavBar from \"./components/General/NavBar.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      baseURL: \"http://localhost:3000/api\",\n      user: {},\n      token: \"\",\n      show: false,\n      tamanoRoute: 0\n    };\n  },\n  components: {\n    NavBar: NavBar\n  },\n  created: function created() {\n    var _this = this;\n\n    this.token = localStorage.getItem(\"token\");\n    this.tamanoRoute = this.selectTamano();\n    axios.get(\"http://localhost:3000/api/user\", {\n      headers: {\n        token: this.token\n      }\n    }).then(function (res) {\n      _this.user = res.data.user;\n    });\n\n    if (localStorage.getItem(\"token\") === null) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  updated: function updated() {\n    this.tamanoRoute = this.selectTamano();\n  },\n  computed: {\n    currentRouteName: function currentRouteName() {\n      return this.$route.name;\n    },\n    selectTamano: function selectTamano() {\n      if (this.currentRouteName() == \"home\") {\n        return 0;\n      } else if (this.currentRouteName() == \"tablero\") {\n        return 5;\n      } else {\n        return 0;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    axios.get(\"http://localhost:3000/api/user\", {\n      headers: {\n        token: localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      _this2.user = res.data.user;\n    });\n    this.tamanoRoute = this.selectTamano();\n    this.show = this.ocultarMethod();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;AAWA;AACA;AAEA;AACAA,aADA;AAEAC,MAFA,kBAEA;AACA;AACAC,0CADA;AAEAC,cAFA;AAGAC,eAHA;AAIAC,iBAJA;AAKAC;AALA;AAOA,GAVA;AAWAC;AACAC;AADA,GAXA;AAcAC,SAdA,qBAcA;AAAA;;AACA;AACA;AACAC,UACAC,GADA,CACA,gCADA,EACA;AACAC;AAAAR;AAAA;AADA,KADA,EAIAS,IAJA,CAIA;AACA;AACA,KANA;;AAOA;AACA;AACA,KAFA,MAEA;AACA;AACA;AACA,GA7BA;AA8BAC,SA9BA,qBA8BA;AACA;AACA,GAhCA;AAiCAC;AACAC,oBADA,8BACA;AACA;AACA,KAHA;AAIAC,gBAJA,0BAIA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AAZA,GAjCA;AA+CAC,SA/CA,qBA+CA;AAAA;;AACAR,UACAC,GADA,CACA,gCADA,EACA;AACAC;AAAAR;AAAA;AADA,KADA,EAIAS,IAJA,CAIA;AACA;AACA,KANA;AAOA;AACA;AACA;AAzDA","names":["name","data","baseURL","user","token","show","tamanoRoute","components","NavBar","created","axios","get","headers","then","updated","computed","currentRouteName","selectTamano","mounted"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <NavBar :show=\"show\"></NavBar>\n    <v-main>\n      SHOW : {{ show }}\n      <router-view :user=\"user\" />\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport NavBar from \"./components/General/NavBar.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      baseURL: \"http://localhost:3000/api\",\n      user: {},\n      token: \"\",\n      show: false,\n      tamanoRoute: 0,\n    };\n  },\n  components: {\n    NavBar,\n  },\n  created() {\n    this.token = localStorage.getItem(\"token\");\n    this.tamanoRoute = this.selectTamano();\n    axios\n      .get(\"http://localhost:3000/api/user\", {\n        headers: { token: this.token },\n      })\n      .then((res) => {\n        this.user = res.data.user;\n      });\n    if (localStorage.getItem(\"token\") === null) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  updated() {\n    this.tamanoRoute = this.selectTamano();\n  },\n  computed: {\n    currentRouteName() {\n      return this.$route.name;\n    },\n    selectTamano() {\n      if (this.currentRouteName() == \"home\") {\n        return 0;\n      } else if (this.currentRouteName() == \"tablero\") {\n        return 5;\n      } else {\n        return 0;\n      }\n    },\n  },\n  mounted() {\n    axios\n      .get(\"http://localhost:3000/api/user\", {\n        headers: { token: localStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        this.user = res.data.user;\n      });\n    this.tamanoRoute = this.selectTamano();\n    this.show = this.ocultarMethod();\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}